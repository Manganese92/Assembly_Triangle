    ||||||||||||||||||||||
    ||     # ALGO #     ||
    ||||||||||||||||||||||


###### Initialisation ######

tab_x [0,0]
tab_y [0,0]
max_size 400        ; taille max de la fenetre
var nombre
vecteur_X1
vecteur_X2
vecteur_Y1
vecteur_Y2
determinant


###### Code ######

faire 3 fois :

    nb_aléatoire_x:
        rdrand nombreX
        comparer CF à 1
        jump if not equal à nb_aléatoire_x
        div 400         ; si 400 est mis dans dx et nombreX dans ax alors on fera div dx et le modulo sera dans dx après
        tab_x <-- valeur dx 
        augmenter le compteur pour arriver sur la deuxième place du tableau / Puis la troisième 


    nb_aléatoire_y:
        rdrand nombreY
        comparer CF à 1
        jump if not equal à nb_aléatoire_y
        div 400         ; si 400 est mis dans dx et nombreY dans ax alors on fera div dx et le modulo sera dans dx après
        tab_x <-- valeur dx 
        augmenter le compteur pour arriver sur la deuxième place du tableau / Puis la troisième 

Fin boucle 




; coordonnées de la ligne 1 (noire)
mov dword[x1],300       ;remplacer la valeur par le x mis dans le tableau pour le premier point
mov dword[y1],50        ;remplacer la valeur par le y mis dans le tableau pour le premier point
mov dword[x2],50        ;remplacer la valeur par le x mis dans le tableau pour le second point
mov dword[y2],350       ;remplacer la valeur par le y mis dans le tableau pour le second point
; dessin de la ligne 1
mov rdi,qword[display_name]
mov rsi,qword[window]
mov rdx,qword[gc]
mov ecx,dword[x1]	; coordonnée source en x
mov r8d,dword[y1]	; coordonnée source en y
mov r9d,dword[x2]	; coordonnée destination en x
push qword[y2]		; coordonnée destination en y
call XDrawLine



calcul_determinant:
    ; création du vecteur BA
    vecteur_X1 <-- tab_x[0]
    sub vecteur_X1, tab_x[1]     ; on soustrait les deux position X de deux points pour faire un vecteur
    vecteur_Y1 <-- tab_y[0
    sub vecteur_Y1, tab_y [1]    ; on soustrait les deux position y de deux points pour faire un vecteur

    ; création du vecteur BC
    vecteur_X2 <-- tab_x[1]
    sub vecteur_X2, tab_x[2]     ; on soustrait les deux position X de deux points pour faire un vecteur
    vecteur_Y2 <-- tab_y[1]
    sub vecteur_Y2, tab_y [2]    ; on soustrait les deux position y de deux points pour faire un vecteur

    ; calcul du determinant 
    mul vecteur_X1, vecteur_X2
    mul vecteur_Y1, vecteur_Y2
    ; trouver un moyen plus optimiser pour mettre directement le resultat dans determinant
    sub vecteur_X1, vecteur_Y1
    mov determinant, vecteur_X1

    comparer determinant à 0
    jump to direct if inferieur 
    jump to indirect if superieur




###### notes ######

--> une fonction pour le nombre aléatoire ( de la ligne 19 à 22)
--> une fonction pour calculer le determinant (faire les calculs sotcker le resultat (positif ou non) et l'interpreté dans le main)
--> tableaux pour les x et tableau pour les y | et du coup lire tout les 
 --> x min x max 
 --> y min y max